// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package communitycommons.actions;

import com.mendix.systemwideinterfaces.core.IMendixObject;
import communitycommons.ORM;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.UserAction;

/**
 * Clones objects
 * 
 * - Source: the original object to copy
 * - Target: the object to copy it into (should be of the same type, or a specialization)
 * - includeAssociations: whether to clone associations. 
 * 
 * If associated objects need to be cloned as well, use deepClone, this function only copies the references, not the reffered objects. Target is not committed automatically.
 */
public class Clone extends UserAction<java.lang.Boolean>
{
	private final IMendixObject source;
	private final IMendixObject target;
	private final java.lang.Boolean withAssociations;

	public Clone(
		IContext context,
		IMendixObject _source,
		IMendixObject _target,
		java.lang.Boolean _withAssociations
	)
	{
		super(context);
		this.source = _source;
		this.target = _target;
		this.withAssociations = _withAssociations;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		return ORM.cloneObject(this.getContext(), source, target, withAssociations);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Clone";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
