// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package communitycommons.actions;

import java.time.LocalDate;
import java.time.YearMonth;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class MonthsBetween extends CustomJavaAction<java.lang.Long>
{
	private java.util.Date date1;
	private java.util.Date date2;

	public MonthsBetween(IContext context, java.util.Date date1, java.util.Date date2)
	{
		super(context);
		this.date1 = date1;
		this.date2 = date2;
	}

	@Override
	public java.lang.Long executeAction() throws Exception
	{
		// BEGIN USER CODE
	    LocalDate localDate1 = date1.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
	    LocalDate localDate2 = date2.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
	    YearMonth m1 = YearMonth.from(localDate1);
	    YearMonth m2 = YearMonth.from(localDate2);

	    return m1.until(m2, ChronoUnit.MONTHS) + 1;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "MonthsBetween";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
