// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package system.proxies;

public class UserReportInfo
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject userReportInfoMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "System.UserReportInfo";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UserType("UserType"),
		Hash("Hash"),
		UserReportInfo_User("System.UserReportInfo_User");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public UserReportInfo(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected UserReportInfo(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject userReportInfoMendixObject)
	{
		if (userReportInfoMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, userReportInfoMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.userReportInfoMendixObject = userReportInfoMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'UserReportInfo.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static system.proxies.UserReportInfo initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return system.proxies.UserReportInfo.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static system.proxies.UserReportInfo initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new system.proxies.UserReportInfo(context, mendixObject);
	}

	public static system.proxies.UserReportInfo load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return system.proxies.UserReportInfo.initialize(context, mendixObject);
	}

	public static java.util.List<system.proxies.UserReportInfo> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> system.proxies.UserReportInfo.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of UserType
	 * @param usertype
	 */
	public final system.proxies.UserType getUserType()
	{
		return getUserType(getContext());
	}

	/**
	 * @param context
	 * @return value of UserType
	 */
	public final system.proxies.UserType getUserType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.UserType.toString());
		if (obj == null) {
			return null;
		}
		return system.proxies.UserType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of UserType
	 * @param usertype
	 */
	public final void setUserType(system.proxies.UserType usertype)
	{
		setUserType(getContext(), usertype);
	}

	/**
	 * Set value of UserType
	 * @param context
	 * @param usertype
	 */
	public final void setUserType(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.UserType usertype)
	{
		if (usertype != null) {
			getMendixObject().setValue(context, MemberNames.UserType.toString(), usertype.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.UserType.toString(), null);
		}
	}

	/**
	 * @return value of Hash
	 */
	public final java.lang.String getHash()
	{
		return getHash(getContext());
	}

	/**
	 * @param context
	 * @return value of Hash
	 */
	public final java.lang.String getHash(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Hash.toString());
	}

	/**
	 * Set value of Hash
	 * @param hash
	 */
	public final void setHash(java.lang.String hash)
	{
		setHash(getContext(), hash);
	}

	/**
	 * Set value of Hash
	 * @param context
	 * @param hash
	 */
	public final void setHash(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String hash)
	{
		getMendixObject().setValue(context, MemberNames.Hash.toString(), hash);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of UserReportInfo_User
	 */
	public final system.proxies.User getUserReportInfo_User() throws com.mendix.core.CoreException
	{
		return getUserReportInfo_User(getContext());
	}

	/**
	 * @param context
	 * @return value of UserReportInfo_User
	 * @throws com.mendix.core.CoreException
	 */
	public final system.proxies.User getUserReportInfo_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UserReportInfo_User.toString());
		if (identifier != null) {
			result = system.proxies.User.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of UserReportInfo_User
	 * @param userreportinfo_user
	 */
	public final void setUserReportInfo_User(system.proxies.User userreportinfo_user)
	{
		setUserReportInfo_User(getContext(), userreportinfo_user);
	}

	/**
	 * Set value of UserReportInfo_User
	 * @param context
	 * @param userreportinfo_user
	 */
	public final void setUserReportInfo_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User userreportinfo_user)
	{
		if (userreportinfo_user == null) {
			getMendixObject().setValue(context, MemberNames.UserReportInfo_User.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.UserReportInfo_User.toString(), userreportinfo_user.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return userReportInfoMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final system.proxies.UserReportInfo that = (system.proxies.UserReportInfo) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
