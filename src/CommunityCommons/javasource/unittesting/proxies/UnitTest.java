// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package unittesting.proxies;

public class UnitTest
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject unitTestMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "UnitTesting.UnitTest";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Result("Result"),
		ResultMessage("ResultMessage"),
		LastStep("LastStep"),
		LastRun("LastRun"),
		IsMf("IsMf"),
		ReadableTime("ReadableTime"),
		_dirty("_dirty"),
		UnitTest_TestSuite("UnitTesting.UnitTest_TestSuite");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public UnitTest(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "UnitTesting.UnitTest"));
	}

	protected UnitTest(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject unitTestMendixObject)
	{
		if (unitTestMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("UnitTesting.UnitTest", unitTestMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a UnitTesting.UnitTest");

		this.unitTestMendixObject = unitTestMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'UnitTest.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static unittesting.proxies.UnitTest initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return unittesting.proxies.UnitTest.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static unittesting.proxies.UnitTest initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new unittesting.proxies.UnitTest(context, mendixObject);
	}

	public static unittesting.proxies.UnitTest load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return unittesting.proxies.UnitTest.initialize(context, mendixObject);
	}

	public static java.util.List<unittesting.proxies.UnitTest> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<unittesting.proxies.UnitTest> result = new java.util.ArrayList<unittesting.proxies.UnitTest>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//UnitTesting.UnitTest" + xpathConstraint))
			result.add(unittesting.proxies.UnitTest.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * Set value of Result
	 * @param result
	 */
	public final unittesting.proxies.UnitTestResult getResult()
	{
		return getResult(getContext());
	}

	/**
	 * @param context
	 * @return value of Result
	 */
	public final unittesting.proxies.UnitTestResult getResult(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Result.toString());
		if (obj == null)
			return null;

		return unittesting.proxies.UnitTestResult.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Result
	 * @param result
	 */
	public final void setResult(unittesting.proxies.UnitTestResult result)
	{
		setResult(getContext(), result);
	}

	/**
	 * Set value of Result
	 * @param context
	 * @param result
	 */
	public final void setResult(com.mendix.systemwideinterfaces.core.IContext context, unittesting.proxies.UnitTestResult result)
	{
		if (result != null)
			getMendixObject().setValue(context, MemberNames.Result.toString(), result.toString());
		else
			getMendixObject().setValue(context, MemberNames.Result.toString(), null);
	}

	/**
	 * @return value of ResultMessage
	 */
	public final java.lang.String getResultMessage()
	{
		return getResultMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of ResultMessage
	 */
	public final java.lang.String getResultMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ResultMessage.toString());
	}

	/**
	 * Set value of ResultMessage
	 * @param resultmessage
	 */
	public final void setResultMessage(java.lang.String resultmessage)
	{
		setResultMessage(getContext(), resultmessage);
	}

	/**
	 * Set value of ResultMessage
	 * @param context
	 * @param resultmessage
	 */
	public final void setResultMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String resultmessage)
	{
		getMendixObject().setValue(context, MemberNames.ResultMessage.toString(), resultmessage);
	}

	/**
	 * @return value of LastStep
	 */
	public final java.lang.String getLastStep()
	{
		return getLastStep(getContext());
	}

	/**
	 * @param context
	 * @return value of LastStep
	 */
	public final java.lang.String getLastStep(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LastStep.toString());
	}

	/**
	 * Set value of LastStep
	 * @param laststep
	 */
	public final void setLastStep(java.lang.String laststep)
	{
		setLastStep(getContext(), laststep);
	}

	/**
	 * Set value of LastStep
	 * @param context
	 * @param laststep
	 */
	public final void setLastStep(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String laststep)
	{
		getMendixObject().setValue(context, MemberNames.LastStep.toString(), laststep);
	}

	/**
	 * @return value of LastRun
	 */
	public final java.util.Date getLastRun()
	{
		return getLastRun(getContext());
	}

	/**
	 * @param context
	 * @return value of LastRun
	 */
	public final java.util.Date getLastRun(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.LastRun.toString());
	}

	/**
	 * Set value of LastRun
	 * @param lastrun
	 */
	public final void setLastRun(java.util.Date lastrun)
	{
		setLastRun(getContext(), lastrun);
	}

	/**
	 * Set value of LastRun
	 * @param context
	 * @param lastrun
	 */
	public final void setLastRun(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date lastrun)
	{
		getMendixObject().setValue(context, MemberNames.LastRun.toString(), lastrun);
	}

	/**
	 * @return value of IsMf
	 */
	public final java.lang.Boolean getIsMf()
	{
		return getIsMf(getContext());
	}

	/**
	 * @param context
	 * @return value of IsMf
	 */
	public final java.lang.Boolean getIsMf(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsMf.toString());
	}

	/**
	 * Set value of IsMf
	 * @param ismf
	 */
	public final void setIsMf(java.lang.Boolean ismf)
	{
		setIsMf(getContext(), ismf);
	}

	/**
	 * Set value of IsMf
	 * @param context
	 * @param ismf
	 */
	public final void setIsMf(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean ismf)
	{
		getMendixObject().setValue(context, MemberNames.IsMf.toString(), ismf);
	}

	/**
	 * @return value of ReadableTime
	 */
	public final java.lang.String getReadableTime()
	{
		return getReadableTime(getContext());
	}

	/**
	 * @param context
	 * @return value of ReadableTime
	 */
	public final java.lang.String getReadableTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ReadableTime.toString());
	}

	/**
	 * Set value of ReadableTime
	 * @param readabletime
	 */
	public final void setReadableTime(java.lang.String readabletime)
	{
		setReadableTime(getContext(), readabletime);
	}

	/**
	 * Set value of ReadableTime
	 * @param context
	 * @param readabletime
	 */
	public final void setReadableTime(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String readabletime)
	{
		getMendixObject().setValue(context, MemberNames.ReadableTime.toString(), readabletime);
	}

	/**
	 * @return value of _dirty
	 */
	public final java.lang.Boolean get_dirty()
	{
		return get_dirty(getContext());
	}

	/**
	 * @param context
	 * @return value of _dirty
	 */
	public final java.lang.Boolean get_dirty(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames._dirty.toString());
	}

	/**
	 * Set value of _dirty
	 * @param _dirty
	 */
	public final void set_dirty(java.lang.Boolean _dirty)
	{
		set_dirty(getContext(), _dirty);
	}

	/**
	 * Set value of _dirty
	 * @param context
	 * @param _dirty
	 */
	public final void set_dirty(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean _dirty)
	{
		getMendixObject().setValue(context, MemberNames._dirty.toString(), _dirty);
	}

	/**
	 * @return value of UnitTest_TestSuite
	 */
	public final unittesting.proxies.TestSuite getUnitTest_TestSuite() throws com.mendix.core.CoreException
	{
		return getUnitTest_TestSuite(getContext());
	}

	/**
	 * @param context
	 * @return value of UnitTest_TestSuite
	 */
	public final unittesting.proxies.TestSuite getUnitTest_TestSuite(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		unittesting.proxies.TestSuite result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UnitTest_TestSuite.toString());
		if (identifier != null)
			result = unittesting.proxies.TestSuite.load(context, identifier);
		return result;
	}

	/**
	 * Set value of UnitTest_TestSuite
	 * @param unittest_testsuite
	 */
	public final void setUnitTest_TestSuite(unittesting.proxies.TestSuite unittest_testsuite)
	{
		setUnitTest_TestSuite(getContext(), unittest_testsuite);
	}

	/**
	 * Set value of UnitTest_TestSuite
	 * @param context
	 * @param unittest_testsuite
	 */
	public final void setUnitTest_TestSuite(com.mendix.systemwideinterfaces.core.IContext context, unittesting.proxies.TestSuite unittest_testsuite)
	{
		if (unittest_testsuite == null)
			getMendixObject().setValue(context, MemberNames.UnitTest_TestSuite.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.UnitTest_TestSuite.toString(), unittest_testsuite.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return unitTestMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final unittesting.proxies.UnitTest that = (unittesting.proxies.UnitTest) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "UnitTesting.UnitTest";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
